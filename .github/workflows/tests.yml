name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest pytest-cov pytest-xdist
        # Install PyTorch CPU version for CI (lighter weight)
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install transformers tokenizers datasets
        pip install numpy scipy scikit-learn
        # Install optional dependencies if they exist
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

    - name: Run tests with pytest
      env:
        PYTHONPATH: .
        PYTORCH_ENABLE_MPS_FALLBACK: 1
      run: |
        pytest -v --color=yes --tb=short --maxfail=5 \
          --ignore=tests/integration/test_checkpoint_roundtrip.py \
          tests/

    - name: Test Summary
      if: always()
      run: |
        echo "### Test Results Summary" >> $GITHUB_STEP_SUMMARY
        echo "Python ${{ matrix.python-version }} on ${{ matrix.os }}" >> $GITHUB_STEP_SUMMARY
        echo "Tests completed with status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install lint dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black isort

    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 latentwire tests --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 latentwire tests --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
      continue-on-error: true

    - name: Check code formatting with black
      run: |
        black --check --diff latentwire tests --line-length 120
      continue-on-error: true

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff latentwire tests
      continue-on-error: true

  test-minimal:
    # Quick smoke test that runs on every push
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install minimal dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pytest
        pip install torch --index-url https://download.pytorch.org/whl/cpu
        pip install transformers tokenizers

    - name: Run core tests
      env:
        PYTHONPATH: .
      run: |
        # Run only the most critical tests
        pytest tests/cli/ tests/train/ -v --tb=short