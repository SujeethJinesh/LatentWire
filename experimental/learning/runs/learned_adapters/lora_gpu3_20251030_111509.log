================================================================================
LEARNED ADAPTER ABLATION - LORA - STARTING
================================================================================
Python version: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch version: 2.5.1+cu121
CUDA available: True
CUDA device count: 1
CUDA current device: 0
Script: /projects/m000066/sujinesh/LatentWire/experimental/learning/learned_adapter_ablation.py
Adapter type: lora
GPU assigned: 3
Log file: runs/learned_adapters/lora_gpu3_20251030_111509.log
================================================================================

Downloading shards:   0%|          | 0/4 [00:00<?, ?it/s]Downloading shards: 100%|##########| 4/4 [00:00<00:00, 6786.90it/s]
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|##5       | 1/4 [00:22<01:07, 22.46s/it]Loading checkpoint shards:  50%|#####     | 2/4 [00:45<00:45, 22.60s/it]Loading checkpoint shards:  75%|#######5  | 3/4 [01:06<00:21, 21.98s/it]Loading checkpoint shards: 100%|##########| 4/4 [01:11<00:00, 15.35s/it]Loading checkpoint shards: 100%|##########| 4/4 [01:11<00:00, 17.90s/it]
Downloading shards:   0%|          | 0/3 [00:00<?, ?it/s]Downloading shards: 100%|##########| 3/3 [00:00<00:00, 1535.81it/s]
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|###3      | 1/3 [00:58<01:57, 58.71s/it]Loading checkpoint shards:  67%|######6   | 2/3 [01:45<00:51, 51.64s/it]Loading checkpoint shards: 100%|##########| 3/3 [02:34<00:00, 50.56s/it]Loading checkpoint shards: 100%|##########| 3/3 [02:34<00:00, 51.56s/it]

================================================================================
LORA ADAPTER EXPERIMENT FAILED WITH ERROR
================================================================================
Error type: RuntimeError
Error message: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.


Full traceback:
--------------------------------------------------------------------------------
Traceback (most recent call last):
  File "/projects/m000066/sujinesh/LatentWire/experimental/learning/learned_adapter_ablation.py", line 689, in <module>
    results = run_single_adapter_experiment(adapter_type)
  File "/projects/m000066/sujinesh/LatentWire/experimental/learning/learned_adapter_ablation.py", line 576, in run_single_adapter_experiment
    adapter, training_metrics = train_adapter(
  File "/projects/m000066/sujinesh/LatentWire/experimental/learning/learned_adapter_ablation.py", line 264, in train_adapter
    outputs_a = model_a(
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/transformers/models/llama/modeling_llama.py", line 1190, in forward
    outputs = self.model(
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1736, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1747, in _call_impl
    return forward_call(*args, **kwargs)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/transformers/models/llama/modeling_llama.py", line 909, in forward
    cache_position = torch.arange(
RuntimeError: CUDA error: device-side assert triggered
CUDA kernel errors might be asynchronously reported at some other API call, so the stacktrace below might be incorrect.
For debugging consider passing CUDA_LAUNCH_BLOCKING=1
Compile with `TORCH_USE_CUDA_DSA` to enable device-side assertions.

--------------------------------------------------------------------------------

================================================================================
