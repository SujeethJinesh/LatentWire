Using DDP (DistributedDataParallel) with torchrun for 4 GPUs

W1101 14:43:35.958000 2662682 torch/distributed/run.py:793] 
W1101 14:43:35.958000 2662682 torch/distributed/run.py:793] *****************************************
W1101 14:43:35.958000 2662682 torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1101 14:43:35.958000 2662682 torch/distributed/run.py:793] *****************************************
==> Using CUDA on HPC (4 GPUs available)
==> Using CUDA on HPC (4 GPUs available)
==> Using CUDA on HPC (4 GPUs available)
  - Batch size per GPU: 10
  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
==> Using CUDA on HPC (4 GPUs available)
[W1101 14:43:47.705665275 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())
  - Batch size per GPU: 10  - Batch size per GPU: 10
  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4

  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
[W1101 14:43:47.738136475 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
  - Batch size per GPU: 10
  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
[W1101 14:43:47.759477942 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())
[W1101 14:43:47.760177225 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())

✓ Initialized DDP: 4 processes (rank 0)
  Backend: nccl
  Device for rank 0: cuda:0
================================================================================
UNIFIED CROSS-MODEL ALIGNMENT EXPERIMENTS
Timestamp: 2025-11-01T14:43:47.754182
Platform: hpc
Device: cuda
Available CUDA GPUs: 4
DDP: Running with 4 processes
================================================================================
[rank3]:[W1101 14:43:48.755711075 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 3]  using GPU 3 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank0]:[W1101 14:43:48.781700808 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank1]:[W1101 14:43:48.802207479 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 1]  using GPU 1 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank2]:[W1101 14:43:49.014949971 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 2]  using GPU 2 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.

2. Starting all experiments sequentially (FAST-FIRST ORDER)...
Strategy: Each experiment uses all 4 GPUs for faster completion
NEW PRIORITY: Run FAST experiments first (Procrustes + Activation), then SLOW (trained adapters)
  Phase 1 (FAST): Procrustes + Activation for BOTH model pairs (~30 min)
  Phase 2 (SLOW): LoRA, Linear, Affine on Llama 3.1-3.2 first (~2-3 hours)
  Phase 3 (SLOW): LoRA, Token, Linear, Affine on Llama-Mistral (~2-3 hours)
Benefits: Quick insights + early validation + fail fast on model access


================================================================================
EXPERIMENT 1/11: ACTIVATION COMMUNICATION (LLAMA 3.1-3.2)
================================================================================
Models: Llama 3.1 8B (4096 dim) → Llama 3.2 3B (3072 dim)
Reproducing Ramesh & Li (ICML 2025) - activation injection with learned projection
WHY FIRST: Core feasibility test for cross-model communication
Fixes: Replacement (not addition), last token only, forward hooks, dimension handling


================================================================================
ACTIVATION COMMUNICATION EXPERIMENT (Ramesh & Li 2025 Reproduction)
================================================================================
Model A (source): meta-llama/Llama-3.1-8B
Model B (target): meta-llama/Llama-3.2-3B
Method: Replace target's last-token activation with source's projected activation


Loading models on hpc...
Using bfloat16 for H100
Using Flash Attention 2
Downloading shards:   0%|          | 0/4 [00:00<?, ?it/s]Downloading shards: 100%|██████████| 4/4 [00:00<00:00, 3285.14it/s]
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:01,  2.47it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:00<00:00,  2.57it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:01<00:00,  2.30it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  2.43it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  2.41it/s]
Downloading shards:   0%|          | 0/2 [00:00<?, ?it/s]Downloading shards: 100%|██████████| 2/2 [00:00<00:00, 3912.60it/s]
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  1.84it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.25it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  2.17it/s]

Model A: 4096 hidden_dim, 32 layers
Model B: 3072 hidden_dim, 28 layers

Dimension mismatch detected (4096 → 3072)
Looking for learned projection at: /projects/m000066/sujinesh/LatentWire/experimental/learning/runs/learned_projection/projection_4096_to_3072.pt
  ✗ No pre-trained projection found
  Training new projection on C4 dataset (per Ramesh & Li 2025)

================================================================================
TRAINING LEARNED PROJECTION (Ramesh & Li 2025)
================================================================================
Loading 3072 sentences from C4 dataset...
Loaded 3069 sentences from C4

Extracting layer-26 final-token activations...
Using batch size 96 for activation extraction
Extracting activations:   0%|          | 0/32 [00:00<?, ?it/s]Extracting activations:   3%|▎         | 1/32 [00:04<02:18,  4.47s/it]Extracting activations:   6%|▋         | 2/32 [00:06<01:35,  3.19s/it]Extracting activations:   9%|▉         | 3/32 [00:08<01:14,  2.56s/it]Extracting activations:  12%|█▎        | 4/32 [00:10<01:06,  2.38s/it]Extracting activations:  16%|█▌        | 5/32 [00:12<00:57,  2.12s/it]Extracting activations:  19%|█▉        | 6/32 [00:14<00:55,  2.13s/it]Extracting activations:  22%|██▏       | 7/32 [00:16<00:48,  1.94s/it]Extracting activations:  25%|██▌       | 8/32 [00:17<00:45,  1.90s/it]Extracting activations:  28%|██▊       | 9/32 [00:19<00:41,  1.79s/it]Extracting activations:  31%|███▏      | 10/32 [00:21<00:38,  1.77s/it]Extracting activations:  34%|███▍      | 11/32 [00:22<00:36,  1.73s/it]Extracting activations:  38%|███▊      | 12/32 [00:24<00:33,  1.70s/it]Extracting activations:  41%|████      | 13/32 [00:26<00:33,  1.75s/it]Extracting activations:  44%|████▍     | 14/32 [00:27<00:30,  1.68s/it]Extracting activations:  47%|████▋     | 15/32 [00:29<00:28,  1.68s/it]Extracting activations:  50%|█████     | 16/32 [00:31<00:27,  1.73s/it]Extracting activations:  53%|█████▎    | 17/32 [00:37<00:46,  3.13s/it]Extracting activations:  56%|█████▋    | 18/32 [00:40<00:41,  2.95s/it]Extracting activations:  59%|█████▉    | 19/32 [00:41<00:32,  2.48s/it]Extracting activations:  62%|██████▎   | 20/32 [00:43<00:27,  2.26s/it]Extracting activations:  66%|██████▌   | 21/32 [00:44<00:22,  2.06s/it]Extracting activations:  69%|██████▉   | 22/32 [00:46<00:19,  1.91s/it]Extracting activations:  72%|███████▏  | 23/32 [00:48<00:17,  1.93s/it]Extracting activations:  75%|███████▌  | 24/32 [00:50<00:14,  1.81s/it]Extracting activations:  78%|███████▊  | 25/32 [00:51<00:12,  1.79s/it]Extracting activations:  81%|████████▏ | 26/32 [00:53<00:10,  1.77s/it]Extracting activations:  84%|████████▍ | 27/32 [00:54<00:08,  1.68s/it]Extracting activations:  88%|████████▊ | 28/32 [00:56<00:06,  1.72s/it]Extracting activations:  91%|█████████ | 29/32 [00:58<00:05,  1.74s/it]Extracting activations:  94%|█████████▍| 30/32 [01:00<00:03,  1.76s/it]Extracting activations:  97%|█████████▋| 31/32 [01:01<00:01,  1.71s/it]Extracting activations: 100%|██████████| 32/32 [01:03<00:00,  1.63s/it]Extracting activations: 100%|██████████| 32/32 [01:03<00:00,  1.98s/it]
Activations A shape: torch.Size([3069, 4096])
Activations B shape: torch.Size([3069, 3072])
Activation dtype: torch.bfloat16

Training projection matrix for 10 epochs...
Epoch 1/10: MSE Loss = 0.083866
Epoch 2/10: MSE Loss = 0.005405
Epoch 3/10: MSE Loss = 0.001541
Epoch 4/10: MSE Loss = 0.000845
Epoch 5/10: MSE Loss = 0.000524
Epoch 6/10: MSE Loss = 0.000344
Epoch 7/10: MSE Loss = 0.000231
Epoch 8/10: MSE Loss = 0.000162
Epoch 9/10: MSE Loss = 0.000120
Epoch 10/10: MSE Loss = 0.000093

Final MSE on all 3069 samples: 0.000076
================================================================================
PROJECTION TRAINING COMPLETE
================================================================================

  ✓ Saved trained projection to /projects/m000066/sujinesh/LatentWire/experimental/learning/runs/learned_projection/projection_4096_to_3072.pt

  Training reverse projection (3072 → 4096) for bidirectional communication...

================================================================================
TRAINING LEARNED PROJECTION (Ramesh & Li 2025)
================================================================================
Loading 3072 sentences from C4 dataset...
Loaded 3069 sentences from C4

Extracting layer-26 final-token activations...
Using batch size 96 for activation extraction
Extracting activations:   0%|          | 0/32 [00:00<?, ?it/s]Extracting activations:   3%|▎         | 1/32 [00:01<00:50,  1.62s/it]Extracting activations:   6%|▋         | 2/32 [00:03<00:52,  1.75s/it]Extracting activations:   9%|▉         | 3/32 [00:05<00:49,  1.70s/it]Extracting activations:  12%|█▎        | 4/32 [00:06<00:47,  1.68s/it]Extracting activations:  16%|█▌        | 5/32 [00:08<00:46,  1.71s/it]Extracting activations:  19%|█▉        | 6/32 [00:10<00:43,  1.67s/it]Extracting activations:  22%|██▏       | 7/32 [00:11<00:42,  1.70s/it]Extracting activations:  25%|██▌       | 8/32 [00:13<00:42,  1.77s/it]Extracting activations:  28%|██▊       | 9/32 [00:15<00:40,  1.78s/it]Extracting activations:  31%|███▏      | 10/32 [00:17<00:39,  1.79s/it]Extracting activations:  34%|███▍      | 11/32 [00:18<00:35,  1.71s/it]Extracting activations:  38%|███▊      | 12/32 [00:20<00:35,  1.76s/it]Extracting activations:  41%|████      | 13/32 [00:22<00:34,  1.83s/it]Extracting activations:  44%|████▍     | 14/32 [00:24<00:32,  1.79s/it]Extracting activations:  47%|████▋     | 15/32 [00:26<00:30,  1.77s/it]Extracting activations:  50%|█████     | 16/32 [00:27<00:26,  1.68s/it]Extracting activations:  53%|█████▎    | 17/32 [00:31<00:33,  2.20s/it]Extracting activations:  56%|█████▋    | 18/32 [00:32<00:27,  1.99s/it]Extracting activations:  59%|█████▉    | 19/32 [00:34<00:25,  1.99s/it]Extracting activations:  62%|██████▎   | 20/32 [00:36<00:22,  1.86s/it]Extracting activations:  66%|██████▌   | 21/32 [00:37<00:19,  1.82s/it]Extracting activations:  69%|██████▉   | 22/32 [00:39<00:17,  1.71s/it]Extracting activations:  72%|███████▏  | 23/32 [00:40<00:15,  1.69s/it]Extracting activations:  75%|███████▌  | 24/32 [00:42<00:13,  1.70s/it]Extracting activations:  78%|███████▊  | 25/32 [00:44<00:11,  1.66s/it]Extracting activations:  81%|████████▏ | 26/32 [00:45<00:09,  1.62s/it]Extracting activations:  84%|████████▍ | 27/32 [00:47<00:08,  1.67s/it]Extracting activations:  88%|████████▊ | 28/32 [00:49<00:06,  1.66s/it]Extracting activations:  91%|█████████ | 29/32 [00:51<00:05,  1.75s/it]Extracting activations:  94%|█████████▍| 30/32 [00:53<00:03,  1.81s/it]Extracting activations:  97%|█████████▋| 31/32 [00:54<00:01,  1.75s/it]Extracting activations: 100%|██████████| 32/32 [00:56<00:00,  1.79s/it]Extracting activations: 100%|██████████| 32/32 [00:56<00:00,  1.77s/it]
Activations A shape: torch.Size([3069, 3072])
Activations B shape: torch.Size([3069, 4096])
Activation dtype: torch.bfloat16

Training projection matrix for 10 epochs...
Epoch 1/10: MSE Loss = 0.102810
Epoch 2/10: MSE Loss = 0.005005
Epoch 3/10: MSE Loss = 0.000918
Epoch 4/10: MSE Loss = 0.000460
Epoch 5/10: MSE Loss = 0.000278
Epoch 6/10: MSE Loss = 0.000182
Epoch 7/10: MSE Loss = 0.000122
Epoch 8/10: MSE Loss = 0.000085
Epoch 9/10: MSE Loss = 0.000064
Epoch 10/10: MSE Loss = 0.000051

Final MSE on all 3069 samples: 0.000042
================================================================================
PROJECTION TRAINING COMPLETE
================================================================================

  ✓ Saved reverse projection to /projects/m000066/sujinesh/LatentWire/experimental/learning/runs/learned_projection/projection_3072_to_4096.pt

✓ Layer 26 (paper's choice) is valid for both models
Testing layers: [26, 0, 8, 16, 24]
Primary layer (from paper): 26

============================================================
Testing Layer 26
============================================================
  Prompt 1/5: The capital of France is...
/users/sujinesh/.local/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:590: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.6` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/users/sujinesh/.local/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:595: UserWarning: `do_sample` is set to `False`. However, `top_p` is set to `0.9` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_p`.
  warnings.warn(
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is Paris. It is the largest city in France and the capital
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need toerect a new tower, which is 10 feet tall. The n
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is here
The future of artificial intellige
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050, AFK Arena is a popular mobile game that has taken the world by
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs isalt; the cat is a carnivore and the 
    Match: False

============================================================
Testing Layer 0
============================================================
  Prompt 1/5: The capital of France is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is, Paris, is a city of romance and history. It is also a 
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need to to be able to solve the problem. The problem i
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is
The future of artificial intelligence
T
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050,, the world is a very different place. The world is a very diff
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs is
Cats and dogs are both domesticated
    Match: False

============================================================
Testing Layer 8
============================================================
  Prompt 1/5: The capital of France is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is, of course, Paris. It is the largest city in France and
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need to, so we can use the fact that the derivative of
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is
The future of artificial intelligence i
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050,, the world is a very different place. The population is 7 bill
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs is is that cats are carnivores and dog
    Match: False

============================================================
Testing Layer 16
============================================================
  Prompt 1/5: The capital of France is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is the city of Paris. It is the most visited city in the w
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need to3 solutions: 1) The first solution is to use th
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is the future of humanity
The future of ar
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050,, the world is in a state of chaos. The world is divided into t
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs is to their diet. Cats are obligate ca
    Match: False

============================================================
Testing Layer 24
============================================================
  Prompt 1/5: The capital of France is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is2. Paris
A. true
B. false
Answer: A
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need to to find the value of x. We can do this by usin
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is with us now. It is already being used i
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050,....................
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs isi that cats are solitary animals, wh
    Match: False

================================================================================
RESULTS SUMMARY
================================================================================
Layer 26: 0/5 exact matches (0.0%)
Layer  0: 0/5 exact matches (0.0%)
Layer  8: 0/5 exact matches (0.0%)
Layer 16: 0/5 exact matches (0.0%)
Layer 24: 0/5 exact matches (0.0%)
================================================================================

================================================================================
TASK-BASED EVALUATION
================================================================================
Evaluating on real tasks (SQuAD Q&A and GSM8K math) to measure task performance
vs exact text matching. This aligns with Ramesh & Li paper methodology.
NOTE: With random/untrained projection, expect low performance on injected model.
      Trained projection achieves up to 27% improvement over natural language (per Ramesh & Li).

Using layer 26 for task evaluation


============================================================
SQuAD Q&A Evaluation (layer 26)
============================================================
  SQuAD evaluation failed: must be called with a dataclass type or instance

============================================================
GSM8K Math Evaluation (layer 26)
============================================================
Loaded 20 GSM8K test examples
Will print first 3 examples for inspection

  Processing 1/20...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask is not set and cannot be inferred from input because pad token is same as eos token. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.

  Example 1:
    Question: Question: Jared is trying to increase his typing speed. He starts with 47 words per minute (WPM). After some lessons the next time he tests his typing...
    Gold:        '52'
    Model B:     '50.' (full context)
    Model A:     '52' (full context)
    Injected:    '380.' (A's activation → B)
    Random:      '50' (noise → B)
    No Context:  'The answer is C. The most common cause of aortic dissection is hypertension. The aorta is the largest artery in the body. It is a large, elastic tube that carries blood from the heart to the rest of the body. The a' (B alone)
    Correct: B=False, A=True, Inj=False, Rand=False, NC=False
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.

  Example 2:
    Question: Question: Jordan has 2 children who wear diapers.  Each child requires 5 diaper changes per day.  Jordan's wife changes half of the diapers.  How many...
    Gold:        '5'
    Model B:     '5' (full context)
    Model A:     '5' (full context)
    Injected:    '5' (A's activation → B)
    Random:      '.swing' (noise → B)
    No Context:  'The answer is C. The most common cause of aortic dissection is hypertension. The aorta is the largest artery in the body. It is a large, elastic tube that carries blood from the heart to the rest of the body. The a' (B alone)
    Correct: B=True, A=True, Inj=True, Rand=False, NC=False
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.

  Example 3:
    Question: Question: A wooden bridge can carry no more than 5000 pounds. A delivery truck filled with identical boxes, each weighing 15 pounds, will pass over th...
    Gold:        '83'
    Model B:     '3755' (full context)
    Model A:     '5000' (full context)
    Injected:    '380' (A's activation → B)
    Random:      '3755' (noise → B)
    No Context:  'The answer is C. The most common cause of aortic dissection is hypertension. The aorta is the largest artery in the body. It is a large, elastic tube that carries blood from the heart to the rest of the body. The a' (B alone)
    Correct: B=False, A=False, Inj=False, Rand=False, NC=False
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
  Processing 11/20...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
The attention mask and the pad token id were not set. As a consequence, you may observe unexpected behavior. Please pass your input's `attention_mask` to obtain reliable results.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
[rank1]:[E1101 14:53:51.769658475 ProcessGroupNCCL.cpp:616] [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600048 milliseconds before timing out.
[rank1]:[E1101 14:53:51.769999821 ProcessGroupNCCL.cpp:1785] [PG ID 0 PG GUID 0(default_pg) Rank 1] Exception (either an error or timeout) detected by watchdog at work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
[rank2]:[E1101 14:53:51.869746575 ProcessGroupNCCL.cpp:616] [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600065 milliseconds before timing out.
[rank2]:[E1101 14:53:51.870050171 ProcessGroupNCCL.cpp:1785] [PG ID 0 PG GUID 0(default_pg) Rank 2] Exception (either an error or timeout) detected by watchdog at work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
[rank3]:[E1101 14:53:51.876127202 ProcessGroupNCCL.cpp:616] [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600071 milliseconds before timing out.
[rank3]:[E1101 14:53:51.876379055 ProcessGroupNCCL.cpp:1785] [PG ID 0 PG GUID 0(default_pg) Rank 3] Exception (either an error or timeout) detected by watchdog at work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
[rank1]:[E1101 14:53:52.433854503 ProcessGroupNCCL.cpp:1834] [PG ID 0 PG GUID 0(default_pg) Rank 1] Timeout at NCCL work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
[rank1]:[E1101 14:53:52.433933697 ProcessGroupNCCL.cpp:630] [Rank 1] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data.
[rank1]:[E1101 14:53:52.433958859 ProcessGroupNCCL.cpp:636] [Rank 1] To avoid data inconsistency, we are taking the entire process down.
[rank1]:[E1101 14:53:52.435242859 ProcessGroupNCCL.cpp:1595] [PG ID 0 PG GUID 0(default_pg) Rank 1] Process group watchdog thread terminated with exception: [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600048 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

terminate called after throwing an instance of 'c10::DistBackendError'
  what():  [PG ID 0 PG GUID 0(default_pg) Rank 1] Process group watchdog thread terminated with exception: [Rank 1] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600048 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

Exception raised from ncclCommWatchdog at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:1601 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0xe7eb1b (0x15550964db1b in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #3: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #4: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

[rank3]:[E1101 14:53:52.747855858 ProcessGroupNCCL.cpp:1834] [PG ID 0 PG GUID 0(default_pg) Rank 3] Timeout at NCCL work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
[rank3]:[E1101 14:53:52.747890618 ProcessGroupNCCL.cpp:630] [Rank 3] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data.
[rank3]:[E1101 14:53:52.747962118 ProcessGroupNCCL.cpp:636] [Rank 3] To avoid data inconsistency, we are taking the entire process down.
[rank3]:[E1101 14:53:52.749385583 ProcessGroupNCCL.cpp:1595] [PG ID 0 PG GUID 0(default_pg) Rank 3] Process group watchdog thread terminated with exception: [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600071 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

terminate called after throwing an instance of 'c10::DistBackendError'
  what():  [PG ID 0 PG GUID 0(default_pg) Rank 3] Process group watchdog thread terminated with exception: [Rank 3] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600071 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

Exception raised from ncclCommWatchdog at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:1601 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0xe7eb1b (0x15550964db1b in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #3: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #4: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

[rank2]:[E1101 14:53:53.094230946 ProcessGroupNCCL.cpp:1834] [PG ID 0 PG GUID 0(default_pg) Rank 2] Timeout at NCCL work: 2, last enqueued NCCL work: 2, last completed NCCL work: 1.
[rank2]:[E1101 14:53:53.094319274 ProcessGroupNCCL.cpp:630] [Rank 2] Some NCCL operations have failed or timed out. Due to the asynchronous nature of CUDA kernels, subsequent GPU operations might run on corrupted/incomplete data.
[rank2]:[E1101 14:53:53.094347071 ProcessGroupNCCL.cpp:636] [Rank 2] To avoid data inconsistency, we are taking the entire process down.
[rank2]:[E1101 14:53:53.095708856 ProcessGroupNCCL.cpp:1595] [PG ID 0 PG GUID 0(default_pg) Rank 2] Process group watchdog thread terminated with exception: [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600065 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

terminate called after throwing an instance of 'c10::DistBackendError'
  what():  [PG ID 0 PG GUID 0(default_pg) Rank 2] Process group watchdog thread terminated with exception: [Rank 2] Watchdog caught collective operation timeout: WorkNCCL(SeqNum=2, OpType=ALLREDUCE, NumelIn=1, NumelOut=1, Timeout(ms)=600000) ran for 600065 milliseconds before timing out.
Exception raised from checkTimeout at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:618 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: c10d::ProcessGroupNCCL::WorkNCCL::checkTimeout(std::optional<std::chrono::duration<long, std::ratio<1l, 1000l> > >) + 0x282 (0x1555099cfa92 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: c10d::ProcessGroupNCCL::watchdogHandler() + 0x233 (0x1555099d6ed3 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #3: c10d::ProcessGroupNCCL::ncclCommWatchdog() + 0x14d (0x1555099d893d in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #4: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #5: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #6: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

Exception raised from ncclCommWatchdog at ../torch/csrc/distributed/c10d/ProcessGroupNCCL.cpp:1601 (most recent call first):
frame #0: c10::Error::Error(c10::SourceLocation, std::string) + 0x96 (0x15555416c446 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libc10.so)
frame #1: <unknown function> + 0xe7eb1b (0x15550964db1b in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch_cuda.so)
frame #2: <unknown function> + 0x145c0 (0x1555546265c0 in /users/sujinesh/.local/lib/python3.10/site-packages/torch/lib/libtorch.so)
frame #3: <unknown function> + 0x94ac3 (0x15555526fac3 in /lib/x86_64-linux-gnu/libc.so.6)
frame #4: <unknown function> + 0x126850 (0x155555301850 in /lib/x86_64-linux-gnu/libc.so.6)

W1101 14:53:53.420000 2662682 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2662703 closing signal SIGTERM
W1101 14:53:53.421000 2662682 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2662705 closing signal SIGTERM
W1101 14:53:53.421000 2662682 torch/distributed/elastic/multiprocessing/api.py:897] Sending process 2662706 closing signal SIGTERM
/marlowe/apps/Mambaforge/24.3.0-0/lib/python3.10/multiprocessing/resource_tracker.py:224: UserWarning: resource_tracker: There appear to be 1 leaked semaphore objects to clean up at shutdown
  warnings.warn('resource_tracker: There appear to be %d '
E1101 14:53:54.277000 2662682 torch/distributed/elastic/multiprocessing/api.py:869] failed (exitcode: -6) local_rank: 1 (pid: 2662704) of binary: /marlowe/apps/Mambaforge/24.3.0-0/bin/python
Traceback (most recent call last):
  File "/users/sujinesh/.local/bin/torchrun", line 7, in <module>
    sys.exit(main())
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/distributed/elastic/multiprocessing/errors/__init__.py", line 355, in wrapper
    return f(*args, **kwargs)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/distributed/run.py", line 919, in main
    run(args)
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/distributed/run.py", line 910, in run
    elastic_launch(
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 138, in __call__
    return launch_agent(self._config, self._entrypoint, list(args))
  File "/users/sujinesh/.local/lib/python3.10/site-packages/torch/distributed/launcher/api.py", line 269, in launch_agent
    raise ChildFailedError(
torch.distributed.elastic.multiprocessing.errors.ChildFailedError: 
============================================================
/projects/m000066/sujinesh/LatentWire/experimental/learning/unified_cross_model_experiments.py FAILED
------------------------------------------------------------
Failures:
  <NO_OTHER_FAILURES>
------------------------------------------------------------
Root Cause (first observed failure):
[0]:
  time      : 2025-11-01_14:53:53
  host      : n12.cm.cluster
  rank      : 1 (local_rank: 1)
  exitcode  : -6 (pid: 2662704)
  error_file: <N/A>
  traceback : Signal 6 (SIGABRT) received by PID 2662704
============================================================
