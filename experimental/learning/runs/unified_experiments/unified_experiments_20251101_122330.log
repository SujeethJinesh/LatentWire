Using DDP (DistributedDataParallel) with torchrun for 4 GPUs

W1101 12:23:32.355000 977413 torch/distributed/run.py:793] 
W1101 12:23:32.355000 977413 torch/distributed/run.py:793] *****************************************
W1101 12:23:32.355000 977413 torch/distributed/run.py:793] Setting OMP_NUM_THREADS environment variable for each process to be 1 in default, to avoid your system being overloaded, please further tune the variable for optimal performance in your application as needed. 
W1101 12:23:32.355000 977413 torch/distributed/run.py:793] *****************************************
==> Using CUDA on HPC (4 GPUs available)
==> Using CUDA on HPC (4 GPUs available)
==> Using CUDA on HPC (4 GPUs available)
==> Using CUDA on HPC (4 GPUs available)
  - Batch size per GPU: 10
  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
  - Batch size per GPU: 10[W1101 12:24:03.805693856 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())
  - Batch size per GPU: 10
  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4

  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0][W1101 12:24:03.815759852 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())

PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
  - Batch size per GPU: 10[W1101 12:24:03.823439458 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())

  - Global batch size: 40
  - Effective batch (with grad accum): 320
  - Samples: 10000
  - Epochs: 5
  - BF16: True
  - Flash Attention: True
Python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:45:18) [GCC 12.3.0]
PyTorch: 2.5.1+cu121
CUDA available: True
CUDA devices: 4
[W1101 12:24:03.840380645 CUDAAllocatorConfig.h:28] Warning: expandable_segments not supported on this platform (function operator())

✓ Initialized DDP: 4 processes (rank 0)
  Backend: nccl
  Device for rank 0: cuda:0
================================================================================
UNIFIED CROSS-MODEL ALIGNMENT EXPERIMENTS
Timestamp: 2025-11-01T12:24:03.744832
Platform: hpc
Device: cuda
Available CUDA GPUs: 4
DDP: Running with 4 processes
================================================================================
[rank2]:[W1101 12:24:04.537614815 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 2]  using GPU 2 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank3]:[W1101 12:24:04.549479695 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 3]  using GPU 3 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank1]:[W1101 12:24:04.571635673 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 1]  using GPU 1 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.
[rank0]:[W1101 12:24:04.579963201 ProcessGroupNCCL.cpp:4115] [PG ID 0 PG GUID 0 Rank 0]  using GPU 0 to perform barrier as devices used by this process are currently unknown. This can potentially cause a hang if this rank to GPU mapping is incorrect.Specify device_ids in barrier() to force use of a particular device,or call init_process_group() with a device_id.

2. Starting all experiments sequentially (FAST-FIRST ORDER)...
Strategy: Each experiment uses all 4 GPUs for faster completion
NEW PRIORITY: Run FAST experiments first (Procrustes + Activation), then SLOW (trained adapters)
  Phase 1 (FAST): Procrustes + Activation for BOTH model pairs (~30 min)
  Phase 2 (SLOW): LoRA, Linear, Affine on Llama 3.1-3.2 first (~2-3 hours)
  Phase 3 (SLOW): LoRA, Token, Linear, Affine on Llama-Mistral (~2-3 hours)
Benefits: Quick insights + early validation + fail fast on model access


================================================================================
EXPERIMENT 1/11: ACTIVATION COMMUNICATION (LLAMA 3.1-3.2)
================================================================================
Models: Llama 3.1 8B (4096 dim) → Llama 3.2 3B (3072 dim)
Reproducing Ramesh & Li (ICML 2025) - activation injection with learned projection
WHY FIRST: Core feasibility test for cross-model communication
Fixes: Replacement (not addition), last token only, forward hooks, dimension handling


================================================================================
ACTIVATION COMMUNICATION EXPERIMENT (Ramesh & Li 2025 Reproduction)
================================================================================
Model A (source): meta-llama/Llama-3.1-8B
Model B (target): meta-llama/Llama-3.2-3B
Method: Replace target's last-token activation with source's projected activation


Loading models on hpc...
Using bfloat16 for H100
Using Flash Attention 2
Downloading shards:   0%|          | 0/4 [00:00<?, ?it/s]Downloading shards:  25%|██▌       | 1/4 [00:00<00:00,  9.31it/s]Downloading shards: 100%|██████████| 4/4 [00:00<00:00, 35.28it/s]
You are attempting to use Flash Attention 2.0 with a model not initialized on GPU. Make sure to move the model to GPU after initializing it on CPU with `model.to('cuda')`.
Loading checkpoint shards:   0%|          | 0/4 [00:00<?, ?it/s]Loading checkpoint shards:  25%|██▌       | 1/4 [00:00<00:00,  3.02it/s]Loading checkpoint shards:  50%|█████     | 2/4 [00:00<00:00,  2.85it/s]Loading checkpoint shards:  75%|███████▌  | 3/4 [00:01<00:00,  2.72it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  3.16it/s]Loading checkpoint shards: 100%|██████████| 4/4 [00:01<00:00,  3.00it/s]
Downloading shards:   0%|          | 0/2 [00:00<?, ?it/s]Downloading shards: 100%|██████████| 2/2 [00:00<00:00, 2941.31it/s]
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:00<00:00,  3.10it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.83it/s]Loading checkpoint shards: 100%|██████████| 2/2 [00:00<00:00,  3.51it/s]

Model A: 4096 hidden_dim, 32 layers
Model B: 3072 hidden_dim, 28 layers

Dimension mismatch detected (4096 → 3072)
Looking for learned projection at: /projects/m000066/sujinesh/LatentWire/experimental/learning/runs/learned_projection/projection_4096_to_3072.pt
  ✗ No pre-trained projection found
  Creating new untrained projection (will use random initialization)

✓ Layer 26 (paper's choice) is valid for both models
Testing layers: [26, 0, 8, 16, 24]
Primary layer (from paper): 26

============================================================
Testing Layer 26
============================================================
  Prompt 1/5: The capital of France is...
/users/sujinesh/.local/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:590: UserWarning: `do_sample` is set to `False`. However, `temperature` is set to `0.6` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `temperature`.
  warnings.warn(
/users/sujinesh/.local/lib/python3.10/site-packages/transformers/generation/configuration_utils.py:595: UserWarning: `do_sample` is set to `False`. However, `top_p` is set to `0.9` -- this flag is only used in sample-based generation modes. You should set `do_sample=True` or unset `top_p`.
  warnings.warn(
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is chronically short of space. The city is constantly expa
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need toCreate a new class called “Student” and add the
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The future of artificial intelligence is here. The future of artificial intellig
    Injected:  The future of artificial intelligence is here
The future of artificial intellige
    Match: False
  Prompt 4/5: In the year 2050,...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  In the year 2050, the world is a very different place. The world is now a global
    Injected:  In the year 2050,0.5% of the world’s population will be over 100 years old. The 
    Match: False
  Prompt 5/5: The main difference between cats and dogs is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The main difference between cats and dogs is that cats are solitary animals, whi
    Injected:  The main difference between cats and dogs is the way they communicate. Cats are 
    Match: False

============================================================
Testing Layer 0
============================================================
  Prompt 1/5: The capital of France is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  The capital of France is Paris. It is the largest city in France and the capital
    Injected:  The capital of France is; Paris, is a city of romance, history, and culture. It 
    Match: False
  Prompt 2/5: To solve this problem, we need to...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
    Baseline:  To solve this problem, we need to find the value of x. We can do this by using t
    Injected:  To solve this problem, we need to to solve this problem, we need to use the foll
    Match: False
  Prompt 3/5: The future of artificial intelligence is...
Setting `pad_token_id` to `eos_token_id`:None for open-end generation.
